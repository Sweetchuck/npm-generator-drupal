<?php

// @codingStandardsIgnoreStart
/**
 * Class RoboFile.
 */
class RoboFile extends \Robo\Tasks
// @codingStandardsIgnoreEnd
{
    use Cheppers\Robo\Task\Phpcs\LoadTasks;

    /**
     * @var array
     */
    protected $composerInfo = [];

    /**
     * @var string
     */
    protected $packageVendor = '';

    /**
     * @var string
     */
    protected $packageName = '';

    /**
     * @var string
     */
    protected $binDir = 'vendor/bin';

    /**
     * RoboFile constructor.
     */
    public function __construct()
    {
        $this->initComposerInfo();

        $this->setContainer(\Robo\Config::getContainer());

        /** @var \Robo\Container\RoboContainer $c */
        $c = $this->getContainer();
        $c
            ->addServiceProvider(static::getPhpcsServiceProvider())
            ->addServiceProvider(\Robo\Task\Filesystem\loadTasks::getFilesystemServices());
    }

    /**
     * Git "pre-commit" hook callback.
     *
     * @return \Robo\Collection\Collection
     */
    public function githookPreCommit()
    {
        return $this
            ->collection()
            ->add($this->taskComposerValidate(), 'lint.composer.lock')
            ->add($this->getTaskPhpcsLint(), 'lint.phpcs.psr2');
    }

    /**
     * @return \Cheppers\Robo\Task\Phpcs\TaskPhpcsLint
     */
    protected function getTaskPhpcsLint()
    {
        return $this->taskPhpcsLint([
            'colors' => 'always',
            'standard' => 'PSR2',
            'reports' => [
                'full' => null,
                'checkstyle' => 'reports/checkstyle.phpcs.psr2.xml',
            ],
            'files' => [
                'RoboFile.php',
            ],
        ]);
    }
}
